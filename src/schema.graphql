scalar DateTime

type Query {
  me: User
  publishedUserPolls: [Poll!]!
  unpublishedUserPolls: [Poll!]!
  allPublicPolls: [Poll!]!
  allPrivatePolls: [Poll!]!
  poll(id: ID!): Poll
}

type Mutation {
  register(
    firstName: String!
    lastName: String!
    email: String!
    password: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createPoll(
    title: String!
    description: String!
    options: [String!]!
    recipients: [String!]
    access: AccessType
  ): Poll!
  updatePollTitle(id: ID!, title: String!): Poll
  updatePollDescription(id: ID!, description: String!): Poll
  updatePollTitleAndDescription(
    id: ID!
    title: String!
    description: String!
  ): Poll!
  updatePollAccess(id: ID!, access: AccessType!): Poll!
  deletePoll(id: ID!): Poll!
  publishPoll(id: ID!): Poll!
  unpublishPoll(id: ID!): Poll!
  closePoll(id: ID!): Poll!
  addPollRecipients(id: ID!, recipients: [String!]!): [Recipient!]!
  removePollRecipients(id: ID!, recipients: [String!]!): [Recipient!]!
  createPollOptions(pollId: ID!, descriptions: [String!]!): [Option!]!
  updatePollOptionDescription(id: ID!, description: String!): Option!
  deletePollOption(id: ID!): Option!
  createPollVote(optionId: ID!): Vote
  updatePollVote(id: ID!, optionId: ID!): Vote
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  polls: [Poll!]!
  voted: [Poll!]!
  votes: [Vote!]!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Poll {
  id: ID!
  title: String!
  description: String!
  options: [Option!]!
  recipients: [Recipient!]!
  voted: [User!]!
  creator: User!
  access: AccessType!
  isPublished: Boolean!
  isClosed: Boolean!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Recipient {
  id: ID!
  email: String!
  poll: Poll!
  hasSentEmail: Boolean!
}

enum AccessType {
  PUBLIC
  PRIVATE
}

type Option {
  id: ID!
  description: String!
  votes: [Vote!]!
  poll: Poll!
  creator: User!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Vote {
  id: ID!
  option: Option!
  poll: Poll!
  creator: User!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}
